services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cctv_layout
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
    - postgres_data:/var/lib/postgresql/data
    ports:
    - 55432:5432
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    ports:
    - 56379:6379
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 10s
      timeout: 5s
      retries: 3
  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_SERVER_CORS_ALLOW_ORIGIN: "http://localhost:5173,http://127.0.0.1:5173"
      MINIO_SERVER_CORS_ALLOW_METHODS: "GET,PUT,POST"
      MINIO_SERVER_CORS_ALLOW_HEADERS: "*"
    command: server /data --console-address ":9001"
    volumes:
    - minio_data:/data
    ports:
    - 9000:9000
    - 9001:9001
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:9000/minio/health/ready
      timeout: 10s
      interval: 10s
      retries: 5
  minio-init:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z
    depends_on:
      minio:
        condition: service_started
    entrypoint:
      - /bin/sh
      - -c
      - |
        set -e
        mc alias set local http://minio:9000 minioadmin minioadmin
        mc mb --ignore-existing local/cctv-layout-assets
        mc anonymous set download local/cctv-layout-assets
    restart: "no"
  backend:
    build:
      context: ./backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: cctv_layout
      TYPEORM_LOGGING: 'true'
      REALTIME_PATH: /realtime
      ALLOWED_ORIGINS: http://localhost:5173
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OBJECT_STORAGE_ENDPOINT: http://minio:9000
      OBJECT_STORAGE_REGION: us-east-1
      OBJECT_STORAGE_ACCESS_KEY: minioadmin
      OBJECT_STORAGE_SECRET_KEY: minioadmin
      OBJECT_STORAGE_BUCKET: cctv-layout-assets
      OBJECT_STORAGE_PUBLIC_BASE_URL: http://minio.localtest.me:9000/cctv-layout-assets
      OBJECT_STORAGE_PUBLIC_UPLOAD_ENDPOINT: http://minio.localtest.me:9000
      OBJECT_STORAGE_FORCE_PATH_STYLE: 'true'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
      minio-init:
        condition: service_completed_successfully
    ports:
    - 3000:3000
    volumes:
    - ./backend:/app
    - backend_node_modules:/app/node_modules
    command: npm run start:dev
    healthcheck:
      test:
      - CMD
      - node
      - scripts/healthcheck.js
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  frontend:
    build:
      context: ./frontend
    depends_on:
    - backend
    ports:
    - 5173:5173
    volumes:
    - ./frontend:/app
    - frontend_node_modules:/app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
volumes:
  postgres_data: null
  backend_node_modules: null
  frontend_node_modules: null
  minio_data: null
